/*
Landscape omnikeeper REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package okclient

import (
	"encoding/json"
)

// CIDTO struct for CIDTO
type CIDTO struct {
	Id string `json:"id"`
	Attributes map[string]CIAttributeDTO `json:"attributes"`
}

// NewCIDTO instantiates a new CIDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCIDTO(id string, attributes map[string]CIAttributeDTO) *CIDTO {
	this := CIDTO{}
	this.Id = id
	this.Attributes = attributes
	return &this
}

// NewCIDTOWithDefaults instantiates a new CIDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCIDTOWithDefaults() *CIDTO {
	this := CIDTO{}
	return &this
}

// GetId returns the Id field value
func (o *CIDTO) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CIDTO) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CIDTO) SetId(v string) {
	o.Id = v
}

// GetAttributes returns the Attributes field value
func (o *CIDTO) GetAttributes() map[string]CIAttributeDTO {
	if o == nil {
		var ret map[string]CIAttributeDTO
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *CIDTO) GetAttributesOk() (*map[string]CIAttributeDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Attributes, true
}

// SetAttributes sets field value
func (o *CIDTO) SetAttributes(v map[string]CIAttributeDTO) {
	o.Attributes = v
}

func (o CIDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["attributes"] = o.Attributes
	}
	return json.Marshal(toSerialize)
}

type NullableCIDTO struct {
	value *CIDTO
	isSet bool
}

func (v NullableCIDTO) Get() *CIDTO {
	return v.value
}

func (v *NullableCIDTO) Set(val *CIDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableCIDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableCIDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCIDTO(val *CIDTO) *NullableCIDTO {
	return &NullableCIDTO{value: val, isSet: true}
}

func (v NullableCIDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCIDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


