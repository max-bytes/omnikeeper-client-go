/*
 * Landscape omnikeeper REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package okclient

import (
	"encoding/json"
)

// LayerDTO struct for LayerDTO
type LayerDTO struct {
	Name string `json:"name"`
	Id int64 `json:"id"`
}

// NewLayerDTO instantiates a new LayerDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLayerDTO(name string, id int64) *LayerDTO {
	this := LayerDTO{}
	this.Name = name
	this.Id = id
	return &this
}

// NewLayerDTOWithDefaults instantiates a new LayerDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLayerDTOWithDefaults() *LayerDTO {
	this := LayerDTO{}
	return &this
}

// GetName returns the Name field value
func (o *LayerDTO) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LayerDTO) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LayerDTO) SetName(v string) {
	o.Name = v
}

// GetId returns the Id field value
func (o *LayerDTO) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *LayerDTO) GetIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *LayerDTO) SetId(v int64) {
	o.Id = v
}

func (o LayerDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableLayerDTO struct {
	value *LayerDTO
	isSet bool
}

func (v NullableLayerDTO) Get() *LayerDTO {
	return v.value
}

func (v *NullableLayerDTO) Set(val *LayerDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableLayerDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableLayerDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLayerDTO(val *LayerDTO) *NullableLayerDTO {
	return &NullableLayerDTO{value: val, isSet: true}
}

func (v NullableLayerDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLayerDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


