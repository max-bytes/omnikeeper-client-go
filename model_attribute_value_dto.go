/*
Landscape omnikeeper REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package okclient

import (
	"encoding/json"
)

// AttributeValueDTO struct for AttributeValueDTO
type AttributeValueDTO struct {
	Type *AttributeValueType `json:"type,omitempty"`
	IsArray *bool `json:"isArray,omitempty"`
	Values []string `json:"values,omitempty"`
}

// NewAttributeValueDTO instantiates a new AttributeValueDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributeValueDTO() *AttributeValueDTO {
	this := AttributeValueDTO{}
	return &this
}

// NewAttributeValueDTOWithDefaults instantiates a new AttributeValueDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeValueDTOWithDefaults() *AttributeValueDTO {
	this := AttributeValueDTO{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AttributeValueDTO) GetType() AttributeValueType {
	if o == nil || isNil(o.Type) {
		var ret AttributeValueType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValueDTO) GetTypeOk() (*AttributeValueType, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AttributeValueDTO) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given AttributeValueType and assigns it to the Type field.
func (o *AttributeValueDTO) SetType(v AttributeValueType) {
	o.Type = &v
}

// GetIsArray returns the IsArray field value if set, zero value otherwise.
func (o *AttributeValueDTO) GetIsArray() bool {
	if o == nil || isNil(o.IsArray) {
		var ret bool
		return ret
	}
	return *o.IsArray
}

// GetIsArrayOk returns a tuple with the IsArray field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValueDTO) GetIsArrayOk() (*bool, bool) {
	if o == nil || isNil(o.IsArray) {
    return nil, false
	}
	return o.IsArray, true
}

// HasIsArray returns a boolean if a field has been set.
func (o *AttributeValueDTO) HasIsArray() bool {
	if o != nil && !isNil(o.IsArray) {
		return true
	}

	return false
}

// SetIsArray gets a reference to the given bool and assigns it to the IsArray field.
func (o *AttributeValueDTO) SetIsArray(v bool) {
	o.IsArray = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *AttributeValueDTO) GetValues() []string {
	if o == nil || isNil(o.Values) {
		var ret []string
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeValueDTO) GetValuesOk() ([]string, bool) {
	if o == nil || isNil(o.Values) {
    return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *AttributeValueDTO) HasValues() bool {
	if o != nil && !isNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []string and assigns it to the Values field.
func (o *AttributeValueDTO) SetValues(v []string) {
	o.Values = v
}

func (o AttributeValueDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.IsArray) {
		toSerialize["isArray"] = o.IsArray
	}
	if !isNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

type NullableAttributeValueDTO struct {
	value *AttributeValueDTO
	isSet bool
}

func (v NullableAttributeValueDTO) Get() *AttributeValueDTO {
	return v.value
}

func (v *NullableAttributeValueDTO) Set(val *AttributeValueDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeValueDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeValueDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeValueDTO(val *AttributeValueDTO) *NullableAttributeValueDTO {
	return &NullableAttributeValueDTO{value: val, isSet: true}
}

func (v NullableAttributeValueDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeValueDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


