/*
Landscape omnikeeper REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package okclient

import (
	"encoding/json"
)

// InboundIDMethodByTemporaryCIID struct for InboundIDMethodByTemporaryCIID
type InboundIDMethodByTemporaryCIID struct {
	Type NullableString `json:"type,omitempty"`
	TempID NullableString `json:"tempID,omitempty"`
}

// NewInboundIDMethodByTemporaryCIID instantiates a new InboundIDMethodByTemporaryCIID object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInboundIDMethodByTemporaryCIID() *InboundIDMethodByTemporaryCIID {
	this := InboundIDMethodByTemporaryCIID{}
	return &this
}

// NewInboundIDMethodByTemporaryCIIDWithDefaults instantiates a new InboundIDMethodByTemporaryCIID object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInboundIDMethodByTemporaryCIIDWithDefaults() *InboundIDMethodByTemporaryCIID {
	this := InboundIDMethodByTemporaryCIID{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InboundIDMethodByTemporaryCIID) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InboundIDMethodByTemporaryCIID) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *InboundIDMethodByTemporaryCIID) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *InboundIDMethodByTemporaryCIID) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *InboundIDMethodByTemporaryCIID) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *InboundIDMethodByTemporaryCIID) UnsetType() {
	o.Type.Unset()
}

// GetTempID returns the TempID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InboundIDMethodByTemporaryCIID) GetTempID() string {
	if o == nil || o.TempID.Get() == nil {
		var ret string
		return ret
	}
	return *o.TempID.Get()
}

// GetTempIDOk returns a tuple with the TempID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InboundIDMethodByTemporaryCIID) GetTempIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TempID.Get(), o.TempID.IsSet()
}

// HasTempID returns a boolean if a field has been set.
func (o *InboundIDMethodByTemporaryCIID) HasTempID() bool {
	if o != nil && o.TempID.IsSet() {
		return true
	}

	return false
}

// SetTempID gets a reference to the given NullableString and assigns it to the TempID field.
func (o *InboundIDMethodByTemporaryCIID) SetTempID(v string) {
	o.TempID.Set(&v)
}
// SetTempIDNil sets the value for TempID to be an explicit nil
func (o *InboundIDMethodByTemporaryCIID) SetTempIDNil() {
	o.TempID.Set(nil)
}

// UnsetTempID ensures that no value is present for TempID, not even an explicit nil
func (o *InboundIDMethodByTemporaryCIID) UnsetTempID() {
	o.TempID.Unset()
}

func (o InboundIDMethodByTemporaryCIID) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.TempID.IsSet() {
		toSerialize["tempID"] = o.TempID.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableInboundIDMethodByTemporaryCIID struct {
	value *InboundIDMethodByTemporaryCIID
	isSet bool
}

func (v NullableInboundIDMethodByTemporaryCIID) Get() *InboundIDMethodByTemporaryCIID {
	return v.value
}

func (v *NullableInboundIDMethodByTemporaryCIID) Set(val *InboundIDMethodByTemporaryCIID) {
	v.value = val
	v.isSet = true
}

func (v NullableInboundIDMethodByTemporaryCIID) IsSet() bool {
	return v.isSet
}

func (v *NullableInboundIDMethodByTemporaryCIID) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInboundIDMethodByTemporaryCIID(val *InboundIDMethodByTemporaryCIID) *NullableInboundIDMethodByTemporaryCIID {
	return &NullableInboundIDMethodByTemporaryCIID{value: val, isSet: true}
}

func (v NullableInboundIDMethodByTemporaryCIID) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInboundIDMethodByTemporaryCIID) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


