/*
Landscape omnikeeper REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package okclient

import (
	"encoding/json"
)

// EffectiveTraitDTO struct for EffectiveTraitDTO
type EffectiveTraitDTO struct {
	TraitAttributes map[string]CIAttributeDTO `json:"traitAttributes"`
	TraitRelations map[string][]RelatedCIDTO `json:"traitRelations"`
}

// NewEffectiveTraitDTO instantiates a new EffectiveTraitDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEffectiveTraitDTO(traitAttributes map[string]CIAttributeDTO, traitRelations map[string][]RelatedCIDTO) *EffectiveTraitDTO {
	this := EffectiveTraitDTO{}
	this.TraitAttributes = traitAttributes
	this.TraitRelations = traitRelations
	return &this
}

// NewEffectiveTraitDTOWithDefaults instantiates a new EffectiveTraitDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEffectiveTraitDTOWithDefaults() *EffectiveTraitDTO {
	this := EffectiveTraitDTO{}
	return &this
}

// GetTraitAttributes returns the TraitAttributes field value
func (o *EffectiveTraitDTO) GetTraitAttributes() map[string]CIAttributeDTO {
	if o == nil {
		var ret map[string]CIAttributeDTO
		return ret
	}

	return o.TraitAttributes
}

// GetTraitAttributesOk returns a tuple with the TraitAttributes field value
// and a boolean to check if the value has been set.
func (o *EffectiveTraitDTO) GetTraitAttributesOk() (*map[string]CIAttributeDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TraitAttributes, true
}

// SetTraitAttributes sets field value
func (o *EffectiveTraitDTO) SetTraitAttributes(v map[string]CIAttributeDTO) {
	o.TraitAttributes = v
}

// GetTraitRelations returns the TraitRelations field value
func (o *EffectiveTraitDTO) GetTraitRelations() map[string][]RelatedCIDTO {
	if o == nil {
		var ret map[string][]RelatedCIDTO
		return ret
	}

	return o.TraitRelations
}

// GetTraitRelationsOk returns a tuple with the TraitRelations field value
// and a boolean to check if the value has been set.
func (o *EffectiveTraitDTO) GetTraitRelationsOk() (*map[string][]RelatedCIDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TraitRelations, true
}

// SetTraitRelations sets field value
func (o *EffectiveTraitDTO) SetTraitRelations(v map[string][]RelatedCIDTO) {
	o.TraitRelations = v
}

func (o EffectiveTraitDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["traitAttributes"] = o.TraitAttributes
	}
	if true {
		toSerialize["traitRelations"] = o.TraitRelations
	}
	return json.Marshal(toSerialize)
}

type NullableEffectiveTraitDTO struct {
	value *EffectiveTraitDTO
	isSet bool
}

func (v NullableEffectiveTraitDTO) Get() *EffectiveTraitDTO {
	return v.value
}

func (v *NullableEffectiveTraitDTO) Set(val *EffectiveTraitDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableEffectiveTraitDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableEffectiveTraitDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEffectiveTraitDTO(val *EffectiveTraitDTO) *NullableEffectiveTraitDTO {
	return &NullableEffectiveTraitDTO{value: val, isSet: true}
}

func (v NullableEffectiveTraitDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEffectiveTraitDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


