/*
Landscape omnikeeper REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package okclient

import (
	"encoding/json"
	"fmt"
)

// NoFoundTargetCIHandling the model 'NoFoundTargetCIHandling'
type NoFoundTargetCIHandling string

// List of NoFoundTargetCIHandling
const (
	NOFOUNDTARGETCIHANDLING_CREATE_NEW NoFoundTargetCIHandling = "CreateNew"
	NOFOUNDTARGETCIHANDLING_CREATE_NEW_AND_WARN NoFoundTargetCIHandling = "CreateNewAndWarn"
	NOFOUNDTARGETCIHANDLING_DROP NoFoundTargetCIHandling = "Drop"
)

// All allowed values of NoFoundTargetCIHandling enum
var AllowedNoFoundTargetCIHandlingEnumValues = []NoFoundTargetCIHandling{
	"CreateNew",
	"CreateNewAndWarn",
	"Drop",
}

func (v *NoFoundTargetCIHandling) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := NoFoundTargetCIHandling(value)
	for _, existing := range AllowedNoFoundTargetCIHandlingEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid NoFoundTargetCIHandling", value)
}

// NewNoFoundTargetCIHandlingFromValue returns a pointer to a valid NoFoundTargetCIHandling
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewNoFoundTargetCIHandlingFromValue(v string) (*NoFoundTargetCIHandling, error) {
	ev := NoFoundTargetCIHandling(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for NoFoundTargetCIHandling: valid values are %v", v, AllowedNoFoundTargetCIHandlingEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v NoFoundTargetCIHandling) IsValid() bool {
	for _, existing := range AllowedNoFoundTargetCIHandlingEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to NoFoundTargetCIHandling value
func (v NoFoundTargetCIHandling) Ptr() *NoFoundTargetCIHandling {
	return &v
}

type NullableNoFoundTargetCIHandling struct {
	value *NoFoundTargetCIHandling
	isSet bool
}

func (v NullableNoFoundTargetCIHandling) Get() *NoFoundTargetCIHandling {
	return v.value
}

func (v *NullableNoFoundTargetCIHandling) Set(val *NoFoundTargetCIHandling) {
	v.value = val
	v.isSet = true
}

func (v NullableNoFoundTargetCIHandling) IsSet() bool {
	return v.isSet
}

func (v *NullableNoFoundTargetCIHandling) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNoFoundTargetCIHandling(val *NoFoundTargetCIHandling) *NullableNoFoundTargetCIHandling {
	return &NullableNoFoundTargetCIHandling{value: val, isSet: true}
}

func (v NullableNoFoundTargetCIHandling) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNoFoundTargetCIHandling) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

