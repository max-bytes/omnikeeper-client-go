/*
Landscape omnikeeper REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package okclient

import (
	"encoding/json"
)

// AbstractInboundIDMethod struct for AbstractInboundIDMethod
type AbstractInboundIDMethod struct {
	Type string `json:"type"`
}

// NewAbstractInboundIDMethod instantiates a new AbstractInboundIDMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAbstractInboundIDMethod(type_ string) *AbstractInboundIDMethod {
	this := AbstractInboundIDMethod{}
	this.Type = type_
	return &this
}

// NewAbstractInboundIDMethodWithDefaults instantiates a new AbstractInboundIDMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAbstractInboundIDMethodWithDefaults() *AbstractInboundIDMethod {
	this := AbstractInboundIDMethod{}
	return &this
}

// GetType returns the Type field value
func (o *AbstractInboundIDMethod) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AbstractInboundIDMethod) GetTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AbstractInboundIDMethod) SetType(v string) {
	o.Type = v
}

func (o AbstractInboundIDMethod) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableAbstractInboundIDMethod struct {
	value *AbstractInboundIDMethod
	isSet bool
}

func (v NullableAbstractInboundIDMethod) Get() *AbstractInboundIDMethod {
	return v.value
}

func (v *NullableAbstractInboundIDMethod) Set(val *AbstractInboundIDMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableAbstractInboundIDMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableAbstractInboundIDMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAbstractInboundIDMethod(val *AbstractInboundIDMethod) *NullableAbstractInboundIDMethod {
	return &NullableAbstractInboundIDMethod{value: val, isSet: true}
}

func (v NullableAbstractInboundIDMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAbstractInboundIDMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


