/*
Landscape omnikeeper REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package okclient

import (
	"encoding/json"
)

// InboundIDMethodByRelatedTempID struct for InboundIDMethodByRelatedTempID
type InboundIDMethodByRelatedTempID struct {
	Type NullableString `json:"type,omitempty"`
	TempID NullableString `json:"tempID,omitempty"`
	OutgoingRelation *bool `json:"outgoingRelation,omitempty"`
	PredicateID NullableString `json:"predicateID,omitempty"`
}

// NewInboundIDMethodByRelatedTempID instantiates a new InboundIDMethodByRelatedTempID object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInboundIDMethodByRelatedTempID(type_ NullableString) *InboundIDMethodByRelatedTempID {
	this := InboundIDMethodByRelatedTempID{}
	this.Type = type_
	return &this
}

// NewInboundIDMethodByRelatedTempIDWithDefaults instantiates a new InboundIDMethodByRelatedTempID object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInboundIDMethodByRelatedTempIDWithDefaults() *InboundIDMethodByRelatedTempID {
	this := InboundIDMethodByRelatedTempID{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InboundIDMethodByRelatedTempID) GetType() string {
	if o == nil || o.Type.Get() == nil {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InboundIDMethodByRelatedTempID) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *InboundIDMethodByRelatedTempID) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *InboundIDMethodByRelatedTempID) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *InboundIDMethodByRelatedTempID) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *InboundIDMethodByRelatedTempID) UnsetType() {
	o.Type.Unset()
}

// GetTempID returns the TempID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InboundIDMethodByRelatedTempID) GetTempID() string {
	if o == nil || o.TempID.Get() == nil {
		var ret string
		return ret
	}
	return *o.TempID.Get()
}

// GetTempIDOk returns a tuple with the TempID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InboundIDMethodByRelatedTempID) GetTempIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TempID.Get(), o.TempID.IsSet()
}

// HasTempID returns a boolean if a field has been set.
func (o *InboundIDMethodByRelatedTempID) HasTempID() bool {
	if o != nil && o.TempID.IsSet() {
		return true
	}

	return false
}

// SetTempID gets a reference to the given NullableString and assigns it to the TempID field.
func (o *InboundIDMethodByRelatedTempID) SetTempID(v string) {
	o.TempID.Set(&v)
}
// SetTempIDNil sets the value for TempID to be an explicit nil
func (o *InboundIDMethodByRelatedTempID) SetTempIDNil() {
	o.TempID.Set(nil)
}

// UnsetTempID ensures that no value is present for TempID, not even an explicit nil
func (o *InboundIDMethodByRelatedTempID) UnsetTempID() {
	o.TempID.Unset()
}

// GetOutgoingRelation returns the OutgoingRelation field value if set, zero value otherwise.
func (o *InboundIDMethodByRelatedTempID) GetOutgoingRelation() bool {
	if o == nil || o.OutgoingRelation == nil {
		var ret bool
		return ret
	}
	return *o.OutgoingRelation
}

// GetOutgoingRelationOk returns a tuple with the OutgoingRelation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InboundIDMethodByRelatedTempID) GetOutgoingRelationOk() (*bool, bool) {
	if o == nil || o.OutgoingRelation == nil {
		return nil, false
	}
	return o.OutgoingRelation, true
}

// HasOutgoingRelation returns a boolean if a field has been set.
func (o *InboundIDMethodByRelatedTempID) HasOutgoingRelation() bool {
	if o != nil && o.OutgoingRelation != nil {
		return true
	}

	return false
}

// SetOutgoingRelation gets a reference to the given bool and assigns it to the OutgoingRelation field.
func (o *InboundIDMethodByRelatedTempID) SetOutgoingRelation(v bool) {
	o.OutgoingRelation = &v
}

// GetPredicateID returns the PredicateID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InboundIDMethodByRelatedTempID) GetPredicateID() string {
	if o == nil || o.PredicateID.Get() == nil {
		var ret string
		return ret
	}
	return *o.PredicateID.Get()
}

// GetPredicateIDOk returns a tuple with the PredicateID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InboundIDMethodByRelatedTempID) GetPredicateIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PredicateID.Get(), o.PredicateID.IsSet()
}

// HasPredicateID returns a boolean if a field has been set.
func (o *InboundIDMethodByRelatedTempID) HasPredicateID() bool {
	if o != nil && o.PredicateID.IsSet() {
		return true
	}

	return false
}

// SetPredicateID gets a reference to the given NullableString and assigns it to the PredicateID field.
func (o *InboundIDMethodByRelatedTempID) SetPredicateID(v string) {
	o.PredicateID.Set(&v)
}
// SetPredicateIDNil sets the value for PredicateID to be an explicit nil
func (o *InboundIDMethodByRelatedTempID) SetPredicateIDNil() {
	o.PredicateID.Set(nil)
}

// UnsetPredicateID ensures that no value is present for PredicateID, not even an explicit nil
func (o *InboundIDMethodByRelatedTempID) UnsetPredicateID() {
	o.PredicateID.Unset()
}

func (o InboundIDMethodByRelatedTempID) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.TempID.IsSet() {
		toSerialize["tempID"] = o.TempID.Get()
	}
	if o.OutgoingRelation != nil {
		toSerialize["outgoingRelation"] = o.OutgoingRelation
	}
	if o.PredicateID.IsSet() {
		toSerialize["predicateID"] = o.PredicateID.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableInboundIDMethodByRelatedTempID struct {
	value *InboundIDMethodByRelatedTempID
	isSet bool
}

func (v NullableInboundIDMethodByRelatedTempID) Get() *InboundIDMethodByRelatedTempID {
	return v.value
}

func (v *NullableInboundIDMethodByRelatedTempID) Set(val *InboundIDMethodByRelatedTempID) {
	v.value = val
	v.isSet = true
}

func (v NullableInboundIDMethodByRelatedTempID) IsSet() bool {
	return v.isSet
}

func (v *NullableInboundIDMethodByRelatedTempID) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInboundIDMethodByRelatedTempID(val *InboundIDMethodByRelatedTempID) *NullableInboundIDMethodByRelatedTempID {
	return &NullableInboundIDMethodByRelatedTempID{value: val, isSet: true}
}

func (v NullableInboundIDMethodByRelatedTempID) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInboundIDMethodByRelatedTempID) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


