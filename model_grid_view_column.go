/*
 * Landscape omnikeeper REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package okclient

import (
	"encoding/json"
)

// GridViewColumn struct for GridViewColumn
type GridViewColumn struct {
	SourceAttributeName NullableString `json:"sourceAttributeName,omitempty"`
	ColumnDescription NullableString `json:"columnDescription,omitempty"`
	ValueType *AttributeValueType `json:"valueType,omitempty"`
	WriteLayer NullableInt64 `json:"writeLayer,omitempty"`
}

// NewGridViewColumn instantiates a new GridViewColumn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridViewColumn() *GridViewColumn {
	this := GridViewColumn{}
	return &this
}

// NewGridViewColumnWithDefaults instantiates a new GridViewColumn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridViewColumnWithDefaults() *GridViewColumn {
	this := GridViewColumn{}
	return &this
}

// GetSourceAttributeName returns the SourceAttributeName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GridViewColumn) GetSourceAttributeName() string {
	if o == nil || o.SourceAttributeName.Get() == nil {
		var ret string
		return ret
	}
	return *o.SourceAttributeName.Get()
}

// GetSourceAttributeNameOk returns a tuple with the SourceAttributeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GridViewColumn) GetSourceAttributeNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SourceAttributeName.Get(), o.SourceAttributeName.IsSet()
}

// HasSourceAttributeName returns a boolean if a field has been set.
func (o *GridViewColumn) HasSourceAttributeName() bool {
	if o != nil && o.SourceAttributeName.IsSet() {
		return true
	}

	return false
}

// SetSourceAttributeName gets a reference to the given NullableString and assigns it to the SourceAttributeName field.
func (o *GridViewColumn) SetSourceAttributeName(v string) {
	o.SourceAttributeName.Set(&v)
}
// SetSourceAttributeNameNil sets the value for SourceAttributeName to be an explicit nil
func (o *GridViewColumn) SetSourceAttributeNameNil() {
	o.SourceAttributeName.Set(nil)
}

// UnsetSourceAttributeName ensures that no value is present for SourceAttributeName, not even an explicit nil
func (o *GridViewColumn) UnsetSourceAttributeName() {
	o.SourceAttributeName.Unset()
}

// GetColumnDescription returns the ColumnDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GridViewColumn) GetColumnDescription() string {
	if o == nil || o.ColumnDescription.Get() == nil {
		var ret string
		return ret
	}
	return *o.ColumnDescription.Get()
}

// GetColumnDescriptionOk returns a tuple with the ColumnDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GridViewColumn) GetColumnDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ColumnDescription.Get(), o.ColumnDescription.IsSet()
}

// HasColumnDescription returns a boolean if a field has been set.
func (o *GridViewColumn) HasColumnDescription() bool {
	if o != nil && o.ColumnDescription.IsSet() {
		return true
	}

	return false
}

// SetColumnDescription gets a reference to the given NullableString and assigns it to the ColumnDescription field.
func (o *GridViewColumn) SetColumnDescription(v string) {
	o.ColumnDescription.Set(&v)
}
// SetColumnDescriptionNil sets the value for ColumnDescription to be an explicit nil
func (o *GridViewColumn) SetColumnDescriptionNil() {
	o.ColumnDescription.Set(nil)
}

// UnsetColumnDescription ensures that no value is present for ColumnDescription, not even an explicit nil
func (o *GridViewColumn) UnsetColumnDescription() {
	o.ColumnDescription.Unset()
}

// GetValueType returns the ValueType field value if set, zero value otherwise.
func (o *GridViewColumn) GetValueType() AttributeValueType {
	if o == nil || o.ValueType == nil {
		var ret AttributeValueType
		return ret
	}
	return *o.ValueType
}

// GetValueTypeOk returns a tuple with the ValueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridViewColumn) GetValueTypeOk() (*AttributeValueType, bool) {
	if o == nil || o.ValueType == nil {
		return nil, false
	}
	return o.ValueType, true
}

// HasValueType returns a boolean if a field has been set.
func (o *GridViewColumn) HasValueType() bool {
	if o != nil && o.ValueType != nil {
		return true
	}

	return false
}

// SetValueType gets a reference to the given AttributeValueType and assigns it to the ValueType field.
func (o *GridViewColumn) SetValueType(v AttributeValueType) {
	o.ValueType = &v
}

// GetWriteLayer returns the WriteLayer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GridViewColumn) GetWriteLayer() int64 {
	if o == nil || o.WriteLayer.Get() == nil {
		var ret int64
		return ret
	}
	return *o.WriteLayer.Get()
}

// GetWriteLayerOk returns a tuple with the WriteLayer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GridViewColumn) GetWriteLayerOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.WriteLayer.Get(), o.WriteLayer.IsSet()
}

// HasWriteLayer returns a boolean if a field has been set.
func (o *GridViewColumn) HasWriteLayer() bool {
	if o != nil && o.WriteLayer.IsSet() {
		return true
	}

	return false
}

// SetWriteLayer gets a reference to the given NullableInt64 and assigns it to the WriteLayer field.
func (o *GridViewColumn) SetWriteLayer(v int64) {
	o.WriteLayer.Set(&v)
}
// SetWriteLayerNil sets the value for WriteLayer to be an explicit nil
func (o *GridViewColumn) SetWriteLayerNil() {
	o.WriteLayer.Set(nil)
}

// UnsetWriteLayer ensures that no value is present for WriteLayer, not even an explicit nil
func (o *GridViewColumn) UnsetWriteLayer() {
	o.WriteLayer.Unset()
}

func (o GridViewColumn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SourceAttributeName.IsSet() {
		toSerialize["sourceAttributeName"] = o.SourceAttributeName.Get()
	}
	if o.ColumnDescription.IsSet() {
		toSerialize["columnDescription"] = o.ColumnDescription.Get()
	}
	if o.ValueType != nil {
		toSerialize["valueType"] = o.ValueType
	}
	if o.WriteLayer.IsSet() {
		toSerialize["writeLayer"] = o.WriteLayer.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableGridViewColumn struct {
	value *GridViewColumn
	isSet bool
}

func (v NullableGridViewColumn) Get() *GridViewColumn {
	return v.value
}

func (v *NullableGridViewColumn) Set(val *GridViewColumn) {
	v.value = val
	v.isSet = true
}

func (v NullableGridViewColumn) IsSet() bool {
	return v.isSet
}

func (v *NullableGridViewColumn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridViewColumn(val *GridViewColumn) *NullableGridViewColumn {
	return &NullableGridViewColumn{value: val, isSet: true}
}

func (v NullableGridViewColumn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridViewColumn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


