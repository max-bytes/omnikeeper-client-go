/*
 * Landscape omnikeeper REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package okclient

import (
	"encoding/json"
)

// FragmentDTO struct for FragmentDTO
type FragmentDTO struct {
	Name string `json:"name"`
	Value AttributeValueDTO `json:"value"`
	Ciid string `json:"ciid"`
}

// NewFragmentDTO instantiates a new FragmentDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFragmentDTO(name string, value AttributeValueDTO, ciid string) *FragmentDTO {
	this := FragmentDTO{}
	this.Name = name
	this.Value = value
	this.Ciid = ciid
	return &this
}

// NewFragmentDTOWithDefaults instantiates a new FragmentDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFragmentDTOWithDefaults() *FragmentDTO {
	this := FragmentDTO{}
	return &this
}

// GetName returns the Name field value
func (o *FragmentDTO) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FragmentDTO) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FragmentDTO) SetName(v string) {
	o.Name = v
}

// GetValue returns the Value field value
func (o *FragmentDTO) GetValue() AttributeValueDTO {
	if o == nil {
		var ret AttributeValueDTO
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *FragmentDTO) GetValueOk() (*AttributeValueDTO, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *FragmentDTO) SetValue(v AttributeValueDTO) {
	o.Value = v
}

// GetCiid returns the Ciid field value
func (o *FragmentDTO) GetCiid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ciid
}

// GetCiidOk returns a tuple with the Ciid field value
// and a boolean to check if the value has been set.
func (o *FragmentDTO) GetCiidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Ciid, true
}

// SetCiid sets field value
func (o *FragmentDTO) SetCiid(v string) {
	o.Ciid = v
}

func (o FragmentDTO) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["ciid"] = o.Ciid
	}
	return json.Marshal(toSerialize)
}

type NullableFragmentDTO struct {
	value *FragmentDTO
	isSet bool
}

func (v NullableFragmentDTO) Get() *FragmentDTO {
	return v.value
}

func (v *NullableFragmentDTO) Set(val *FragmentDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableFragmentDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableFragmentDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFragmentDTO(val *FragmentDTO) *NullableFragmentDTO {
	return &NullableFragmentDTO{value: val, isSet: true}
}

func (v NullableFragmentDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFragmentDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


