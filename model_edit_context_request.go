/*
 * Landscape omnikeeper REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package okclient

import (
	"encoding/json"
)

// EditContextRequest struct for EditContextRequest
type EditContextRequest struct {
	SpeakingName NullableString `json:"speakingName,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Configuration *GridViewConfiguration `json:"configuration,omitempty"`
}

// NewEditContextRequest instantiates a new EditContextRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditContextRequest() *EditContextRequest {
	this := EditContextRequest{}
	return &this
}

// NewEditContextRequestWithDefaults instantiates a new EditContextRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditContextRequestWithDefaults() *EditContextRequest {
	this := EditContextRequest{}
	return &this
}

// GetSpeakingName returns the SpeakingName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditContextRequest) GetSpeakingName() string {
	if o == nil || o.SpeakingName.Get() == nil {
		var ret string
		return ret
	}
	return *o.SpeakingName.Get()
}

// GetSpeakingNameOk returns a tuple with the SpeakingName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditContextRequest) GetSpeakingNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SpeakingName.Get(), o.SpeakingName.IsSet()
}

// HasSpeakingName returns a boolean if a field has been set.
func (o *EditContextRequest) HasSpeakingName() bool {
	if o != nil && o.SpeakingName.IsSet() {
		return true
	}

	return false
}

// SetSpeakingName gets a reference to the given NullableString and assigns it to the SpeakingName field.
func (o *EditContextRequest) SetSpeakingName(v string) {
	o.SpeakingName.Set(&v)
}
// SetSpeakingNameNil sets the value for SpeakingName to be an explicit nil
func (o *EditContextRequest) SetSpeakingNameNil() {
	o.SpeakingName.Set(nil)
}

// UnsetSpeakingName ensures that no value is present for SpeakingName, not even an explicit nil
func (o *EditContextRequest) UnsetSpeakingName() {
	o.SpeakingName.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EditContextRequest) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EditContextRequest) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *EditContextRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *EditContextRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *EditContextRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *EditContextRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *EditContextRequest) GetConfiguration() GridViewConfiguration {
	if o == nil || o.Configuration == nil {
		var ret GridViewConfiguration
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditContextRequest) GetConfigurationOk() (*GridViewConfiguration, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *EditContextRequest) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given GridViewConfiguration and assigns it to the Configuration field.
func (o *EditContextRequest) SetConfiguration(v GridViewConfiguration) {
	o.Configuration = &v
}

func (o EditContextRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SpeakingName.IsSet() {
		toSerialize["speakingName"] = o.SpeakingName.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	return json.Marshal(toSerialize)
}

type NullableEditContextRequest struct {
	value *EditContextRequest
	isSet bool
}

func (v NullableEditContextRequest) Get() *EditContextRequest {
	return v.value
}

func (v *NullableEditContextRequest) Set(val *EditContextRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEditContextRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEditContextRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditContextRequest(val *EditContextRequest) *NullableEditContextRequest {
	return &NullableEditContextRequest{value: val, isSet: true}
}

func (v NullableEditContextRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditContextRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


